name: Build citron nightly

on:
  push:
    branches:
      - main

jobs:
  build-nightly:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures all files are available

      - name: Set up Visual Studio 2022
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '17.0'  # Visual Studio 2022

      - name: Install dependencies
        run: |
          # Install CMake 3.4.3 (force downgrade)
          choco install cmake --version=3.4.3 --installargs 'ADD_CMAKE_TO_PATH=System' --force -y
          Write-Output "CMake 3.4.3 installed"

          # Ensure Git PATH is set (Git is pre-installed)
          Write-Output "Configuring Git PATH..."
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          Update-SessionEnvironment
          $env:PATH = "$env:PATH;C:\Program Files\Git\bin"
          Write-Output "Git PATH configured: $env:PATH"

          # Install 7-Zip for fallback
          choco install 7zip -y
          Update-SessionEnvironment
          Write-Output "7-Zip installed"

          # Download Vulkan SDK
          $VULKAN_VERSION = "1.4.309.0"
          $VULKAN_URL = "https://sdk.lunarg.com/sdk/download/${VULKAN_VERSION}/windows/VulkanSDK-${VULKAN_VERSION}-Installer.exe"
          Invoke-WebRequest -Uri $VULKAN_URL -OutFile "VulkanSDK-Installer.exe"
          Write-Output "Vulkan SDK installer downloaded"

          # Try installing Vulkan SDK with timeout
          Write-Output "Attempting Vulkan SDK silent install..."
          try {
            Start-Process -FilePath "VulkanSDK-Installer.exe" -ArgumentList "/S" -Wait -NoNewWindow -Timeout 300
            $VULKAN_SDK_PATH = "C:\VulkanSDK\${VULKAN_VERSION}"
            Write-Output "Vulkan SDK installed to $VULKAN_SDK_PATH"
          } catch {
            Write-Output "Vulkan SDK install failed or timed out: $_"
            Write-Output "Falling back to 7-Zip extraction..."
            7z x VulkanSDK-Installer.exe -oVulkanSDK
            $VULKAN_SDK_PATH = Resolve-Path "VulkanSDK"
            Write-Output "Vulkan SDK extracted to $VULKAN_SDK_PATH"
          }

          # Set Vulkan SDK environment variables
          $env:VULKAN_SDK = "$VULKAN_SDK_PATH"
          $env:PATH = "$env:PATH;$VULKAN_SDK_PATH\Bin"
          echo "VULKAN_SDK=$VULKAN_SDK_PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8
          Write-Output "Vulkan SDK PATH updated: $env:PATH"

          # Verify glslangValidator exists
          $GLSLANG_PATH = "$VULKAN_SDK_PATH\Bin\glslangValidator.exe"
          if (Test-Path $GLSLANG_PATH) {
            Write-Output "glslangValidator found at $GLSLANG_PATH"
          } else {
            Write-Output "Error: glslangValidator not found in $VULKAN_SDK_PATH\Bin"
            dir $VULKAN_SDK_PATH -Recurse | Write-Output
            exit 1
          }
        shell: powershell

      - name: Clone source code
        run: |
          Write-Output "Cloning nightly version from https://git.citron-emu.org/Citron/Citron"
          git clone --recursive https://git.citron-emu.org/Citron/Citron.git citron
          cd citron
          $VERSION = $(git rev-parse --short=10 HEAD)
          $FULL_COMMIT = $(git rev-parse HEAD)
          echo "VERSION=$VERSION" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8
          echo "FULL_COMMIT=$FULL_COMMIT" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8
        shell: powershell

      - name: Configure CMake
        run: |
          cd citron
          mkdir build
          cd build
          # Ensure PATH includes Vulkan SDK Bin
          $env:PATH = "$env:PATH;$env:VULKAN_SDK\Bin"
          Write-Output "CMake PATH: $env:PATH"
          cmake .. -G "Visual Studio 17 2022" -A x64 `
            -DCITRON_USE_BUNDLED_VCPKG=ON `
            -DCITRON_TESTS=OFF `
            -DCITRON_CHECK_SUBMODULES=OFF `
            -DCITRON_USE_LLVM_DEMANGLE=OFF `
            -DCITRON_ENABLE_LTO=ON `
            -DCITRON_USE_BUNDLED_QT=ON `
            -DCITRON_USE_QT_MULTIMEDIA=ON `
            -DCITRON_USE_QT_WEB_ENGINE=ON `
            -DENABLE_QT_TRANSLATION=ON `
            -DBUNDLE_SPEEX=ON `
            -DENABLE_WEB_SERVICE=OFF `
            -DUSE_DISCORD_PRESENCE=ON `
            -DCMAKE_BUILD_TYPE=Release `
            -DVULKAN_SDK="$env:VULKAN_SDK"
        shell: powershell

      - name: Build Citron
        run: |
          cd citron/build
          cmake --build . --config Release
        shell: powershell

      - name: Package Citron
        run: |
          cd citron/build
          mkdir Citron-$env:VERSION-windows
          Copy-Item -Path "bin/Release/citron.exe" -Destination "Citron-$env:VERSION-windows/"
          # Copy required DLLs (example based on wiki instructions)
          Copy-Item -Path "externals/ffmpeg-*/bin/*.dll" -Destination "Citron-$env:VERSION-windows/" -ErrorAction SilentlyContinue
          # Package into zip
          Compress-Archive -Path "Citron-$env:VERSION-windows" -DestinationPath "citron-nightly.zip"
        shell: powershell

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: citron-nightly
          path: citron/build/citron-nightly.zip